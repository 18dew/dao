{
   "author" : "Andreas Olofsson (androlo1980@gmail.com)",
   "methods" : {
      "actionsContractAddress(bytes32)" : {
         "details" : "Get the address of the contract with the given Id.",
         "params" : {
            "identifier" : "(bytes32) the identifier (name)"
         },
         "return" : "contractAddress (address) the address (or nil)"
      },
      "actionsContractFromIndex(uint256)" : {
         "details" : "Get the id and address of the contract with the given index.",
         "params" : {
            "index" : "(uint) the index"
         },
         "return" : "identifier (bytes32) the id|contractAddress (bytes32) the address|error (uint16) error code"
      },
      "actionsContractId(address)" : {
         "details" : "Get the id of the contract with the given address.",
         "params" : {
            "contractAddress" : "(address) the contract address"
         },
         "return" : "identifier (bytes32) the id (or nil)"
      },
      "addActionsContract(bytes32,address)" : {
         "details" : "Add a new contract to the registry.",
         "params" : {
            "contractAddress" : "(address) the contract address",
            "identifier" : "(bytes32) the identifier (name)"
         },
         "return" : "error (uint16) an error code"
      },
      "addDatabaseContract(bytes32,address)" : {
         "details" : "Add a new contract to the registry.",
         "params" : {
            "contractAddress" : "(address) the contract address",
            "identifier" : "(bytes32) the identifier (name)"
         },
         "return" : "error (uint16) an error code"
      },
      "databaseContractAddress(bytes32)" : {
         "details" : "Get the address of the contract with the given Id.",
         "params" : {
            "identifier" : "(bytes32) the identifier (name)"
         },
         "return" : "contractAddress (address) the address (or nil)"
      },
      "databaseContractFromIndex(uint256)" : {
         "details" : "Get the id and address of the contract with the given index.",
         "params" : {
            "index" : "(uint) the index"
         },
         "return" : "identifier (bytes32) the id|contractAddress (bytes32) the address|error (uint16) error code"
      },
      "databaseContractId(address)" : {
         "details" : "Get the id of the contract with the given address.",
         "params" : {
            "contractAddress" : "(address) the contract address"
         },
         "return" : "identifier (bytes32) the id (or nil)"
      },
      "destroy(address)" : {
         "details" : "Destroy a contract. No return values since it's a destruction. Calls 'selfdestruct' on the contract if successful.",
         "params" : {
            "fundReceiver" : "(address) the account that receives the funds."
         }
      },
      "destroyRemovedActions()" : {
         "details" : "Check if contracts are automatically destroyed when removed",
         "return" : "destroyRemovedActions (bool) whether or not 'destroy' should be called on contracts when they are removed."
      },
      "destroyRemovedDatabases()" : {
         "details" : "Check if contracts are automatically destroyed when removed",
         "return" : "destroyRemovedDatabases (bool) whether or not 'destroy' should be called on contracts when they are removed."
      },
      "numActionsContracts()" : {
         "details" : "Get the number of contracts in the registry",
         "return" : "numContracts (uint) the number of contracts"
      },
      "numDatabaseContracts()" : {
         "details" : "Get the number of contracts in the registry.",
         "return" : "numContracts (uint) the number of contracts"
      },
      "permissionAddress()" : {
         "details" : "Get the address of the permissions-manager.",
         "return" : "pmAddress (address) the address"
      },
      "removeActionsContract(bytes32)" : {
         "details" : "Remove a contract from the registry.",
         "params" : {
            "identifier" : "(bytes32) the identifier (name)"
         },
         "return" : "error (uint16) an error code"
      },
      "removeDatabaseContract(bytes32)" : {
         "details" : "Remove a contract from the registry.",
         "params" : {
            "identifier" : "(bytes32) the identifier (name)"
         },
         "return" : "error (uint16) an error code"
      },
      "setDestroyRemovedActions(bool)" : {
         "details" : "Enable to call 'destroy' method on contracts. when they are removed.",
         "params" : {
            "destroyRemovedActions" : "(bool) whether or not contracts should be overwritable"
         },
         "return" : "error (uint16) error code"
      },
      "setDestroyRemovedDatabases(bool)" : {
         "details" : "Enable to call 'destroy' method on contracts. when they are removed.",
         "params" : {
            "destroyRemovedDatabases" : "(bool) whether or not contracts should be destroyed when removed"
         },
         "return" : "error (uint16) error code"
      },
      "setPermission(address)" : {
         "details" : "Set the permission contract address;",
         "params" : {
            "permissionAddress" : "(address) the address to the permission contract."
         },
         "return" : "error (uint16) error code"
      }
   },
   "title" : "Doug"
}
